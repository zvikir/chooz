generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model photos {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  url        String
  is_primary Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model tags {
  id        String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String      @unique
  slug      String      @unique
  user_tags user_tags[]
}

model user_tags {
  user_id    String   @db.Uuid
  tag_id     String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  tags       tags     @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, tag_id])
  @@index([tag_id], map: "idx_user_tags_tag")
}

model users {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String      @unique
  username      String      @unique
  password_hash String
  display_name  String?
  bio           String?
  birthdate     DateTime?   @db.Date
  location      String?
  created_at    DateTime    @default(now()) @db.Timestamptz(6)
  photos        photos[]
  user_tags     user_tags[]

  @@index([created_at(sort: Desc)], map: "idx_users_created_at")
}
